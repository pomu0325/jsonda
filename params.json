{"name":"Jsonda","body":"# Jsonda - a simple DSL for JSON objects construction.\r\n\r\nThis project provides a Jsonda DSL, which can be used to construct JSON object\r\neasily, in Scala.  The code size of Jsonda is small and it is easy to \r\nunderstand what it does.  Although Jsonda was formerly Jsonic, I was told that\r\nthere is already another Jsonic library in Java by @okapies san.  Then, I renamed\r\nJsonic to Jsonda.\r\n\r\n# Using with sbt\r\n\r\nIf you woule like to use Jsonda with sbt, what you need to do is only\r\nadding the following lines to your build.sbt.\r\n\r\n```scala\r\nresolver += \"kmizu-repo\"  at \"http://kmizu.github.com/maven/\"\r\n    \r\nlibraryDependencies += \"org.onion_lang\" %% \"jsonda\"  % \"0.1\"\r\n```\r\n\r\n# For Developer\r\n\r\n* By running sbt gen-idea, project definition files for IntelliJ IDEA is generated.\r\n* By running sbt eclipse, project definition files for Scala IDE for Eclipse is generated.\r\n\r\n# Syntax\r\n\r\nJsonda is very simple DSL for creating JSON objects.  Notations are followings:\r\n\r\n* object: \r\n    %{ $key1 :- $value1; $key2 :- $value2; ... }\r\n* array:\r\n    $($value1, $value2, ...)\r\n* primitive: \r\n  * number(integer): e.g. 100\r\n  * number(double): e.g. 10.5\r\n  * string (from BigInt): e.g. 100000000000000000000\r\n  * string (from BigDecimal): e.g. 1.123456789\r\n  * string: e.g. \"Hello, World!\"\r\n  * boolean: e.g. true \r\n  * null: null\r\n\r\n# Quick Start\r\n\r\nHere are the way to create JSON using Jsonda:\r\n\r\n```scala\r\nimport org.onion_lang.jsonda.Implicits._\r\n    \r\nval person = %{\r\n  'name :- \"Kota Mizushima\"\r\n  'age :- 28\r\n}\r\n```\r\n    \r\nThe type of person is net.liftweb.json.JsonAST.JValue.  If you are familiar with lift-json, you can easily manipulate JSON objects.\r\n\r\n# Scaladoc\r\n\r\nScaladoc is available via the following links:\r\n\r\n* [Scaladoc(0.0.2)](http://kmizu.github.com/jsonda/api/0.0.2/)\r\n* [Scaladoc(0.1)](http://kmizu.github.com/jsonda/api/0.1)\r\n\r\n# License\r\n\r\nThis software is distributed under modified BSD License. See:\r\nLICENSE.txt\r\n","tagline":"A DSL for constructing json-like data sturctures","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}